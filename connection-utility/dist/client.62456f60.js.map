{"version":3,"sources":["../config.js","client.js"],"names":["host","root","nginxPort","tomcatPort","uMasterPort","mySQLPort","appPort","uAgentPort","wsConnections","connections","tomcat","url","appServer","nginx","httpConnections","mySQL","uMaster","uAgent","fetchWith","method","fetch","body","JSON","stringify","headers","then","resp","json","console","log","ws","connect","WebSocket","addEventListener","open","send","window","timerID","clearInterval","incoming","event","parse","data","close","setInterval"],"mappings":"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","file":"client.62456f60.js","sourceRoot":"../public","sourcesContent":["export const host = \"localhost:\";\nexport const root = \"/\";\n\n// control server\nexport const nginxPort = 80;\nexport const tomcatPort = 8080;\nexport const uMasterPort = 3310;\nexport const mySQLPort = 3306;\n\n// app server\nexport const appPort = 9080;\nexport const uAgentPort = 3320;\n\nexport const wsConnections = {\n  connections: {\n    tomcat: {\n      url: host + tomcatPort\n    },\n    appServer: {\n      url: host + appPort,\n      connections: {\n        nginx: {\n          url: host + nginxPort\n        }\n      }\n    }\n  }\n};\n\nexport const httpConnections = {\n  connections: {\n    tomcat: {\n      url: host + tomcatPort,\n      connections: {\n        mySQL: {\n          url: host + mySQLPort\n        }\n      }\n    },\n    uMaster: {\n      url: host + uMasterPort,\n      connections: {\n        uAgent: {\n          url: host + uAgentPort,\n          connections: {\n            uMaster: {\n              url: host + uMasterPort\n            }\n          }\n        }\n      }\n    }\n  }\n};\n","import { host, nginxPort, httpConnections, wsConnections } from \"../config\";\n\nconst fetchWith = method => {\n  return fetch(`http://${host}${nginxPort}`, {\n    method: method,\n    body: JSON.stringify(httpConnections),\n    headers: { \"Content-Type\": \"application/json\" }\n  }).then(resp => resp.json());\n};\n\n// fetch(`http://${host}${nginxPort}/get`)\n//   .then(resp => resp.json())\n//   .then(console.log);\n\nfetchWith(\"POST\").then(console.log);\nfetchWith(\"PUT\").then(console.log);\nfetchWith(\"PATCH\").then(console.log);\nfetchWith(\"DELETE\").then(console.log);\n\nlet ws;\nconst connect = () => {\n  ws = new WebSocket(`ws://${host}${nginxPort}`);\n\n  ws.addEventListener(\"open\", function open() {\n    ws.send(JSON.stringify(wsConnections));\n\n    if (window.timerID) {\n      window.clearInterval(window.timerID);\n      window.timerID = null;\n    }\n  });\n\n  ws.addEventListener(\"message\", function incoming(event) {\n    console.log(\"ws Data: \", JSON.parse(event.data));\n  });\n\n  // handle disconnect\n  ws.addEventListener(\"close\", function close() {\n    console.log(\"disconnected\");\n    ws = null;\n    // Avoid firing a new setInterval, after one has been done\n    if (!window.timerID) {\n      window.timerID = setInterval(function() {\n        connect();\n      }, 5000);\n    }\n  });\n};\n// ###################\n// connect();\n//\n//\n"]}